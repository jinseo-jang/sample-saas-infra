AWSTemplateFormatVersion: '2010-09-09'
Description: AWS SaaS Boost Lab Sample Application Baseline Infrastructure
Parameters:
  KeyName: 
    Description: Amazon EC2 Key Pair Name for a Jump Box with access to the database
    #Type: AWS::EC2::KeyPair::KeyName
    Type: String
  DBName:
    Description: RDS Database Name
    Type: String
    MinLength: 3
    MaxLength: 31
    AllowedPattern: ^[a-zA-Z]+[a-zA-Z0-9_\$]*$
    ConstraintDescription: Database name must be between 3 and 31 characters in length
  DBMasterUsername:
    Description: RDS Master Username
    Type: String
  DBMasterPassword:
    Description: RDS Master User Password
    Type: String
    NoEcho: true
    MinLength: 8
    AllowedPattern: ^[a-zA-Z0-9/@"' ]{8,}$
    ConstraintDescription: RDS passwords must be at least 8 characters in length
  DBPort:
    Description: RDS DB Port
    Type: String
    Default: 5432    
  # DBAppUsername:
  #   Description: RDS Application Username
  #   Type: String
  # DBAppPassword:
  #   Description: RDS Application User Password
  #   Type: String
  #   NoEcho: true
  #   MinLength: 8
  #   AllowedPattern: ^[a-zA-Z0-9/@"' ]{8,}$
  #   ConstraintDescription: RDS passwords must be at least 8 characters in length
  RDSInstanceType:
    Description: RDS Instance Type
    Type: String
    Default: db.m5d.xlarge
  RDSEngineVersion:
    Description: PostgreSQL version
    Type: String
    Default: 14.7
  AMI:
    Description: EC2 Image ID for the Jump Box and AppServer (don't change)
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    # Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
  CodeBucket:
    Description: Sample Source Code Bucket
    Type: String
    Default: ee-assets-prod-us-east-1    
  BeUserCodeKey:
    Description: Key name of zipped source code in the S3Bucket
    Type: String
    Default: modules/55090f1e96784170989036aa131597b0/v1/be-users.zip
  BeRecordCodeKey:
    Description: Key name of zipped source code in the S3Bucket
    Type: String
    Default: modules/55090f1e96784170989036aa131597b0/v1/be-records.zip   
  Gitbranch:
    Description: Branch name of code repository
    Type: String
    Default: main      
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EC2 Configuration
        Parameters:
          - KeyPair
          - AMI
      - Label:
          default: Database Configuration
        Parameters:
          - RDSInstanceType
          - RDSEngineVersion
          - DBName
          - DBMasterUsername
          - DBMasterPassword
          # - DBAppUsername
          # - DBAppPassword
    ParameterLabels:
      KeyPair:
        default: Key Pair for the Jump box
      DBName:
        default: Database Name
      DBMasterUsername:
        default: RDS Master Username
      DBMasterPassword:
        default: RDS Master Password
      # DBAppUsername:
      #   default: RDS Application Username
      # DBAppPassword:
      #   default: RDS Application Password
      AMI:
        default: Do Not Change - Jump Box AMI
Conditions:
  HasKeyPair: !Not [!Equals [!Ref KeyName, '']]
Resources:
  KeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName:
        Ref: KeyName
      Tags:
        - Key: Name
          Value: ec2-keypair
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: saas-boost-lab-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: saas-boost-lab-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-pub
  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.32.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subA-pub
  SubnetPublicARouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicA
      RouteTableId: !Ref RouteTablePublic
  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.96.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subB-pub
  SubnetPublicBRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicB
      RouteTableId: !Ref RouteTablePublic
  NatGatewayAddrA:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAddrA.AllocationId
      SubnetId: !Ref SubnetPublicA
      Tags:
        - Key: Name
          Value: saas-boost-lab-nat-subA-pub
  RouteTableNatA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-natA
  RouteNatA:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayA
    Properties:
      RouteTableId: !Ref RouteTableNatA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  SubnetPrivateA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.0.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subA-priv
  SubnetPrivateARouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateA
      RouteTableId: !Ref RouteTableNatA
  NatGatewayAddrB:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAddrB.AllocationId
      SubnetId: !Ref SubnetPublicB
      Tags:
        - Key: Name
          Value: saas-boost-lab-nat-subB-pub
  RouteTableNatB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-natB
  RouteNatB:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayB
    Properties:
      RouteTableId: !Ref RouteTableNatB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
  SubnetPrivateB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.64.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subB-priv
  SubnetPrivateBRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateB
      RouteTableId: !Ref RouteTableNatB
  AppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub saas-boost-lab-appserver-sg
      GroupDescription: Deny All
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-appserver-sg
  JumpBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: saas-boost-lab-jumpbox-sg
      GroupDescription: Jump Box SSH Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-jumpbox-sg
  AppServer:
    Type: AWS::EC2::Instance
    Condition: HasKeyPair
    DependsOn: 
      - KeyPair
      - JumpBoxSecurityGroup
      # - RDSInstance
      - BeUserCodeRepo
      - BeRecordCodeRepo
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - "config1"
            - "config2"
        config1:
          files:
            /tmp/bootstrap.sql:
              content: !Sub |
                CREATE TABLE IF NOT EXISTS tenants (
                  tenant_id VARCHAR(50) PRIMARY KEY,
                  tenant_name VARCHAR(100) NOT NULL,
                  onboarding_date DATE NOT NULL,
                  status VARCHAR(50) NOT NULL,
                  tier VARCHAR(50) NOT NULL
                );

                CREATE TABLE IF NOT EXISTS users (
                    user_name VARCHAR(255) primary key,
                    tenant_id VARCHAR(50),
                    FOREIGN KEY (tenant_id) REFERENCES Tenants(tenant_id) ON DELETE CASCADE
                );

                CREATE TABLE IF NOT EXISTS records (
                  record_id SERIAL PRIMARY KEY,
                  tenant_id VARCHAR(50) NOT NULL,
                  user_name varchar(255) NOT NULL,
                  clock_in TIMESTAMP WITH TIME ZONE NOT NULL,
                  clock_out TIMESTAMP WITH TIME ZONE,
                  CONSTRAINT unique_user_clock_in UNIQUE (tenant_id, user_name, clock_in),
                  CONSTRAINT fk_tenant FOREIGN KEY (tenant_id) REFERENCES tenants (tenant_id),
                  CONSTRAINT fk_user_name FOREIGN KEY (user_name) REFERENCES users (user_name)
                );

                CREATE INDEX IF NOT EXISTS idx_records_username_clock_in ON records (user_name, clock_in);
                CREATE INDEX IF NOT EXISTS idx_records_tenant_id_username_clock_in ON records (tenant_id, user_name, clock_in);
              mode: 000644
              owner: root
              group: root                       
        config2:
          commands:
            01_yum_update:
              command: yum update -y
              ignoreErrors: true
            02_cfn_bootstrap:
              command: yum update -y aws-cfn-bootstrap
              ignoreErrors: true
            03_pgsql_install:
              command: yum install -y postgresql15.x86_64
              ignoreErrors: true
            04_git_install:
              command: yum install -y git
              ignoreErrors: true
            05_pip_install:
              command: python3 -m ensurepip
              ignoreErrors: true
            06_pgsql_bootstrap:
              command: /usr/bin/psql --host=$DB_HOST --port=$DB_PORT --username=$DB_USER --dbname=$DB_NAME -f /tmp/bootstrap.sql
              env:
                DB_HOST: TESTHOST
                DB_USER: !Ref DBMasterUsername
                DB_NAME: !Ref DBName
                DB_PORT: !Ref DBPort
                PGPASSWORD: !Ref DBMasterPassword
              ignoreErrors: true
            07_git_config:
              command: git config --system credential.helper '!aws codecommit credential-helper $@'
              ignoreErrors: true
            08_git_config:
              command: git config --system credential.UseHttpPath true
              ignoreErrors: true
            09_clone_userapp:
              command: git clone $USER_REPO
              env:
                USER_REPO: !GetAtt BeUserCodeRepo.CloneUrlHttp
              cwd: "~"
              ignoreErrors: true
            10_clone_recordapp:
              command: git clone $RECORD_REPO
              env:
                RECORD_REPO: !GetAtt BeRecordCodeRepo.CloneUrlHttp
              cwd: "~"
              ignoreErrors: true
            11_run_userserver:
              command: chmod 755 ./runserver.sh && ./runserver.sh
              cwd: !Sub
                - ~/${reponame}
                - reponame: !GetAtt BeUserCodeRepo.Name
              ignoreErrors: true
            12_run_recordserver:
              command: chmod 755 ./runserver.sh && ./runserver.sh
              cwd: !Sub
                - ~/${reponame}
                - reponame: !GetAtt BeRecordCodeRepo.Name
              ignoreErrors: true      
    Properties:
      ImageId: !Ref AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      # IamInstanceProfile:
      #   Ref: EC2InstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref SubnetPrivateA
          GroupSet:
            - !Ref AppServerSecurityGroup
      Tags:
        - Key: Name
          Value: saas-boost-lab-appserver          
      UserData:
        Fn::Base64:
          !Join
            - ''
            - - "#!/bin/bash -xe\n"
              - "# Run the config sets from the CloudFormation metadata\n"
              - "/opt/aws/bin/cfn-init -v -s "
              - !Ref AWS::StackName
              - " -r AppServer -c ascending --region "
              - !Ref AWS::Region
              - "\n\n"    
  BeUserCodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      Code:
        BranchName: !Ref Gitbranch
        S3:
          Bucket: !Ref CodeBucket
          Key: !Ref BeUserCodeKey
      RepositoryDescription: Sample SaaS User service repository
      RepositoryName: sample-saas-backend-users
      Tags: 
        - Key: Name
          Value: saas-boost-lab-be-user-repository
  BeRecordCodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      Code:
        BranchName: !Ref Gitbranch
        S3:
          Bucket: !Ref CodeBucket
          Key: !Ref BeRecordCodeKey
      RepositoryDescription: Sample SaaS Record service repository
      RepositoryName: sample-saas-backend-records
      Tags: 
        - Key: Name
          Value: saas-boost-lab-be-record-repository     
# Outputs:
#   RDSDatabaseName:
#     Description: Database Name
#     Value: !Ref DBName
#   RDSDatabaseMasterUser:
#     Description: Master Database User
#     Value: !Ref DBMasterUsername
#   # AppServerDNS:
#   #   Condition: HasKeyPair
#   #   Description: Jump Box DNS
#   #   Value: !GetAtt JumpBox.PublicDnsName