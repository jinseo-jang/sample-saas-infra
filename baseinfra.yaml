AWSTemplateFormatVersion: '2010-09-09'
Description: AWS SaaS Boost Lab Sample Application Baseline Infrastructure
Parameters:
  KeyName: 
    Description: Amazon EC2 Key Pair Name for a Jump Box with access to the database
    #Type: AWS::EC2::KeyPair::KeyName
    Type: String
  DBName:
    Description: RDS Database Name
    Type: String
    MinLength: 3
    MaxLength: 31
    AllowedPattern: ^[a-zA-Z]+[a-zA-Z0-9_\$]*$
    ConstraintDescription: Database name must be between 3 and 31 characters in length
  DBMasterUsername:
    Description: RDS Master Username
    Type: String
  DBMasterPassword:
    Description: RDS Master User Password
    Type: String
    NoEcho: true
    MinLength: 8
    AllowedPattern: ^[a-zA-Z0-9/@"' ]{8,}$
    ConstraintDescription: RDS passwords must be at least 8 characters in length
  DBPort:
    Description: RDS DB Port
    Type: String
    Default: 5432
  # DBAppUsername:
  #   Description: RDS Application Username
  #   Type: String
  # DBAppPassword:
  #   Description: RDS Application User Password
  #   Type: String
  #   NoEcho: true
  #   MinLength: 8
  #   AllowedPattern: ^[a-zA-Z0-9/@"' ]{8,}$
  #   ConstraintDescription: RDS passwords must be at least 8 characters in length
  RDSInstanceType:
    Description: RDS Instance Type
    Type: String
    Default: db.m5d.xlarge
  RDSEngineVersion:
    Description: PostgreSQL version
    Type: String
    Default: 14.7
  AMI:
    Description: EC2 Image ID for the Jump Box and AppServer (don't change)
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    # Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
  CodeBucket:
    Description: Sample Source Code Bucket
    Type: String
    Default: ee-assets-prod-us-east-1
  FeCodeKey:
    Description: Key name of zipped source code in the S3Bucket
    Type: String
    Default: modules/55090f1e96784170989036aa131597b0/v1/fe.zip
  BeCodeKey:
    Description: Key name of zipped source code in the S3Bucket
    Type: String
    Default: modules/55090f1e96784170989036aa131597b0/v1/be.zip
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EC2 Configuration
        Parameters:
          - KeyPair
          - AMI
      - Label:
          default: Database Configuration
        Parameters:
          - RDSInstanceType
          - RDSEngineVersion
          - DBName
          - DBMasterUsername
          - DBMasterPassword
          - DBPort
          # - DBAppUsername
          # - DBAppPassword
    ParameterLabels:
      KeyPair:
        default: Key Pair for the Jump box
      DBName:
        default: Database Name
      DBMasterUsername:
        default: RDS Master Username
      DBMasterPassword:
        default: RDS Master Password
      DBPort:
        default: RDS DB Port
      # DBAppUsername:
      #   default: RDS Application Username
      # DBAppPassword:
      #   default: RDS Application Password
      AMI:
        default: Do Not Change - Jump Box AMI
Conditions:
  HasKeyPair: !Not [!Equals [!Ref KeyName, '']]
Resources:
  KeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName:
        Ref: KeyName
      Tags:
        - Key: Name
          Value: saas-boost-lab-keypair
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: saas-boost-lab-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: saas-boost-lab-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-pub
  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.32.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subA-pub
  SubnetPublicARouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicA
      RouteTableId: !Ref RouteTablePublic
  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.96.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subB-pub
  SubnetPublicBRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicB
      RouteTableId: !Ref RouteTablePublic
  NatGatewayAddrA:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAddrA.AllocationId
      SubnetId: !Ref SubnetPublicA
      Tags:
        - Key: Name
          Value: saas-boost-lab-nat-subA-pub
  RouteTableNatA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-natA
  RouteNatA:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayA
    Properties:
      RouteTableId: !Ref RouteTableNatA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  SubnetPrivateA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.0.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subA-priv
  SubnetPrivateARouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateA
      RouteTableId: !Ref RouteTableNatA
  NatGatewayAddrB:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayAddrB.AllocationId
      SubnetId: !Ref SubnetPublicB
      Tags:
        - Key: Name
          Value: saas-boost-lab-nat-subB-pub
  RouteTableNatB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-route-natB
  RouteNatB:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayB
    Properties:
      RouteTableId: !Ref RouteTableNatB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
  SubnetPrivateB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.64.0/19
      Tags:
        - Key: Name
          Value: saas-boost-lab-subB-priv
  SubnetPrivateBRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivateB
      RouteTableId: !Ref RouteTableNatB

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for ALB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Adjust this as necessary to limit source IPs
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5100
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: saas-boost-lab-alb-sg          

  AppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub saas-boost-lab-appserver-sg
      GroupDescription: ALB to App Server Access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5100
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: saas-boost-lab-appserver-sg

  JumpBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: saas-boost-lab-jumpbox-sg
      GroupDescription: Jump Box SSH Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-jumpbox-sg
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: saas-boost-lab-rds-sg
      GroupDescription: RDS Aurora PostgreSQL 5432 Security Group
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: saas-boost-lab-rds-sg
  RDSSecurityGroupIngressJumpBox:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RDSSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      SourceSecurityGroupId: !Ref JumpBoxSecurityGroup
  RDSSecurityGroupIngressAppServer:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RDSSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      SourceSecurityGroupId: !Ref AppServerSecurityGroup

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: saas-boost-lab-rds-subnets
      DBSubnetGroupName: saas-boost-lab-rds-subnets
      SubnetIds:
        - !Ref SubnetPrivateA
        - !Ref SubnetPrivateB
  RDSInstance:
    Type: AWS::RDS::DBInstance
    DependsOn: RDSSecurityGroup
    DeletionPolicy: Delete
    Properties:
      DBInstanceIdentifier: saas-boost-lab-rds-instance
      DBInstanceClass: !Ref RDSInstanceType
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      DeleteAutomatedBackups: true
      MultiAZ: false
      Engine: postgres
      EngineVersion: !Ref RDSEngineVersion
      DBName: !Ref DBName
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
        # Fn::Join:
        #   - ''
        #   - - '{{resolve:ssm-secure:saas-boost-lab-owner-pw:'
        #     - !GetAtt InvokeLambdaSSMPutParamSecure.Version
        #     - '}}'
      AllocatedStorage: 20
      StorageType: gp2

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: saas-boost-lab-cfn-lambda-role
      Path: '/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: saas-boost-lab-cfn-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogStreams
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:DeleteParameter
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ListKeys
                  - kms:ListAliases
                  - kms:Describe*
                Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: '*'

  LambdaSSMPutParamSecureLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/saas-boost-lab-ssm-secure
      RetentionInDays: 14
  LambdaSSMPutParamSecure:
    Type: AWS::Lambda::Function
    DependsOn: LambdaSSMPutParamSecureLogs
    Properties:
      FunctionName: !Sub saas-boost-lab-ssm-secure
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.7
      Timeout: 300
      MemorySize: 256
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import json
          import boto3
          import cfnresponse
          from botocore.exceptions import ClientError
          
          def lambda_handler(event, context):
              #print(json.dumps(event, default=str))
              ssm = boto3.client('ssm')
              parameter_name = event['ResourceProperties']['Name']
              parameter_value = event['ResourceProperties']['Value']
              
              if event['RequestType'] in ['Create', 'Update']:
                  try:
                      put_response = ssm.put_parameter(Name=parameter_name, Value=parameter_value, Type='SecureString', Overwrite=True)
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {"Version": put_response['Version']})
                  except ClientError as ssm_error:
                      print("ssm error %s" % str(ssm_error))
                      cfnresponse.send(event, context, cfnresponse.FAILED, {"Reason": str(ssm_error)})
                      raise
              elif event['RequestType'] == 'Delete':
                  try:
                      delete_response = ssm.delete_parameter(Name=parameter_name)
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  except ssm.exceptions.ParameterNotFound as not_found:
                      # Ignore parameter not found
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  except ClientError as ssm_error:
                      print("ssm error %s" % str(ssm_error))
                      cfnresponse.send(event, context, cfnresponse.FAILED, {"Reason": str(ssm_error)})
                      raise
              else:
                  cfnresponse.send(event, context, cfnresponse.FAILED, {"Reason": "Unknown RequestType %s" % event['RequestType']})
  
  InvokeLambdaSSMPutParamSecure1:
    Type: Custom::CustomResource
    DependsOn: LambdaSSMPutParamSecureLogs
    Properties:
      ServiceToken: !GetAtt LambdaSSMPutParamSecure.Arn
      Name: /saas-boost-lab/db/dbpwd
      Value: !Ref DBMasterPassword
  
  InvokeLambdaSSMPutParamSecure2:
    Type: Custom::CustomResource
    DependsOn: LambdaSSMPutParamSecureLogs
    Properties:
      ServiceToken: !GetAtt LambdaSSMPutParamSecure.Arn
      Name: /saas-boost-lab/db/dbname
      Value: !Ref DBName
  
  InvokeLambdaSSMPutParamSecure3:
    Type: Custom::CustomResource
    DependsOn: LambdaSSMPutParamSecureLogs
    Properties:
      ServiceToken: !GetAtt LambdaSSMPutParamSecure.Arn
      Name: /saas-boost-lab/db/dbuser 
      Value: !Ref DBMasterUsername
  
  InvokeLambdaSSMPutParamSecure5:
    Type: Custom::CustomResource
    DependsOn: LambdaSSMPutParamSecureLogs
    Properties:
      ServiceToken: !GetAtt LambdaSSMPutParamSecure.Arn
      Name: /saas-boost-lab/db/dbhost 
      Value: !GetAtt RDSInstance.Endpoint.Address        
  # InvokeLambdaSSMPutParamSecure2:
  #   Type: Custom::CustomResource
  #   DependsOn: LambdaSSMPutParamSecureLogs
  #   Properties:
  #     ServiceToken: !GetAtt LambdaSSMPutParamSecure.Arn
  #     Name: saas-boost-lab-app-pw
  #     Value: !Ref DBAppPassword   
  AppServer:
    Type: AWS::EC2::Instance
    Condition: HasKeyPair
    DependsOn: 
      - KeyPair
      - JumpBoxSecurityGroup
      - RDSInstance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - "config1"
            - "config2"
            - "config3"
            - "config4"
            - "config5"
            - "config6"
        config1:
          commands:
            yum_update:
              command: yum update -y
        config2:
          commands:
            cfn_bootstrap:
              command: yum update -y aws-cfn-bootstrap
        config3:
          commands:
            pgsql_install:
              command: yum install postgresql15.x86_64
        config4:
          files:
            /tmp/bootstrap.sql:
              content: !Sub |
                CREATE TABLE IF NOT EXISTS tenants (
                  tenant_id VARCHAR(50) PRIMARY KEY,
                  tenant_name VARCHAR(100) NOT NULL,
                  onboarding_date DATE NOT NULL,
                  status VARCHAR(50) NOT NULL,
                  tier VARCHAR(50) NOT NULL
                );

                CREATE TABLE IF NOT EXISTS users (
                    user_name VARCHAR(255) primary key,
                    tenant_id VARCHAR(50),
                    FOREIGN KEY (tenant_id) REFERENCES Tenants(tenant_id) ON DELETE CASCADE
                );

                CREATE TABLE IF NOT EXISTS records (
                  record_id SERIAL PRIMARY KEY,
                  tenant_id VARCHAR(50) NOT NULL,
                  user_name varchar(255) NOT NULL,
                  clock_in TIMESTAMP WITH TIME ZONE NOT NULL,
                  clock_out TIMESTAMP WITH TIME ZONE,
                  CONSTRAINT unique_user_clock_in UNIQUE (tenant_id, user_name, clock_in),
                  CONSTRAINT fk_tenant FOREIGN KEY (tenant_id) REFERENCES tenants (tenant_id),
                  CONSTRAINT fk_user_name FOREIGN KEY (user_name) REFERENCES users (user_name)
                );

                CREATE INDEX IF NOT EXISTS idx_records_username_clock_in ON records (user_name, clock_in);
                CREATE INDEX IF NOT EXISTS idx_records_tenant_id_username_clock_in ON records (tenant_id, user_name, clock_in);
              mode: 000644
              owner: root
              group: root
        config5:
          commands:
            pgsql_bootstrap:
              command: /usr/bin/psql --host=$DB_HOST --port=$DB_PORT --username=$DB_USER --dbname=$DB_NAME -f /tmp/bootstrap.sql
              env:
                DB_HOST: !GetAtt RDSInstance.Endpoint.Address
                DB_USER: !Ref DBMasterUsername
                DB_NAME: !Ref DBName
                DB_PORT: !Ref DBPort
                PGPASSWORD: !Ref DBMasterPassword
        config6:
          commands:
            debug:
              command: "which psql;echo $PATH > /tmp/path.txt"
    Properties:
      ImageId: !Ref AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref SubnetPrivateA
          GroupSet:
            - !Ref AppServerSecurityGroup
      Tags:
        - Key: Name
          Value: saas-boost-lab-appserver          
      UserData:
        Fn::Base64:
          !Join
            - ''
            - - "#!/bin/bash -xe\n"
              - "# Run the config sets from the CloudFormation metadata\n"
              - "/opt/aws/bin/cfn-init -v -s "
              - !Ref AWS::StackName
              - " -r AppServer -c ascending --region "
              - !Ref AWS::Region
              - "\n\n"  
  
  JumpBox:
    Type: AWS::EC2::Instance
    Condition: HasKeyPair
    DependsOn: 
      - KeyPair
      - JumpBoxSecurityGroup
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ascending:
            - "config1"
            - "config2"
            - "config3"
        config1:
          commands:
            yum_update:
              command: yum update -y
        config2:
          commands:
            cfn_bootstrap:
              command: yum update -y aws-cfn-bootstrap
        config3:
          commands:
            pgsql_install:
              command: yum install postgresql15.x86_64
    Properties:
      ImageId: !Ref AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref SubnetPublicA
          GroupSet:
            - !Ref JumpBoxSecurityGroup
      Tags:
        - Key: Name
          Value: saas-boost-lab-jumpbox          
      UserData:
        Fn::Base64:
          !Join
            - ''
            - - "#!/bin/bash -xe\n"
              - "# Run the config sets from the CloudFormation metadata\n"
              - "/opt/aws/bin/cfn-init -v -s "
              - !Ref AWS::StackName
              - " -r JumpBox -c ascending --region "
              - !Ref AWS::Region
              - "\n\n"  
  
  # NLB:
  #   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  #   Properties: 
  #     Name: saas-boost-lab-nlb
  #     SubnetMappings: 
  #       - SubnetId: !Ref SubnetPublicA
  #       - SubnetId: !Ref SubnetPublicB
  #     Tags: 
  #       - Key: Name
  #         Value: saas-boost-lab-nlb
  #     Type: network
  
  # Listener1:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     DefaultActions:
  #       - TargetGroupArn:
  #           Ref: TargetGroup1
  #         Type: forward
  #     LoadBalancerArn:
  #       Ref: NLB
  #     Port: 80
  #     Protocol: TCP
  
  # Listener2:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     DefaultActions:
  #       - TargetGroupArn:
  #           Ref: TargetGroup2
  #         Type: forward
  #     LoadBalancerArn:
  #       Ref: NLB
  #     Port: 80
  #     Protocol: TCP
  
  # TargetGroup1:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     Port: 5000
  #     Protocol: TCP
  #     Targets:
  #       - Id:
  #           Ref: AppServer
  #     TargetType: instance
  #     VpcId:
  #       Ref: VPC
  
  # TargetGroup2:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     Port: 5001
  #     Protocol: TCP
  #     Targets:
  #       - Id:
  #           Ref: AppServer
  #     TargetType: instance
  #     VpcId:
  #       Ref: VPC
#ALB
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: saas-boost-lab-alb
      SubnetMappings: 
        - SubnetId: !Ref SubnetPublicA
        - SubnetId: !Ref SubnetPublicB
      SecurityGroups: 
        - !Ref ALBSecurityGroup
      Tags: 
        - Key: Name
          Value: saas-boost-lab-alb
      Type: application

  TargetGroupApp1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: saas-boost-lab-alb-tg-app1
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref VPC
      Targets:
        - Id: !Ref AppServer

  TargetGroupApp2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: saas-boost-lab-alb-tg-app2
      Port: 5001
      Protocol: HTTP
      VpcId: !Ref VPC
      Targets:
        - Id: !Ref AppServer

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref TargetGroupApp1
                Weight: 1
              - TargetGroupArn: !Ref TargetGroupApp2
                Weight: 1
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ListenerRuleApp1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroupApp1
      Conditions: 
        - Field: path-pattern
          Values:
            - /api/users
      ListenerArn: !Ref ALBListener
      Priority: 1

  ListenerRuleApp2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroupApp2
      Conditions: 
        - Field: path-pattern
          Values:
            - /api/records
      ListenerArn: !Ref ALBListener
      Priority: 2

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      AccountRecoverySetting: 
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes: 
        - email
      EmailConfiguration: 
        EmailSendingAccount: COGNITO_DEFAULT
      Policies: 
        PasswordPolicy: 
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: false
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - AttributeDataType: String
          Mutable: false
          Name: tenant_id
          Required: false
          StringAttributeConstraints: 
            MaxLength: 2048
            MinLength: 0
        - AttributeDataType: String
          Mutable: true
          Name: tenant_name
          Required: false
          StringAttributeConstraints: 
            MaxLength: 2048
            MinLength: 0
        - AttributeDataType: String
          Mutable: true
          Name: tenant_tier
          Required: false
          StringAttributeConstraints: 
            MaxLength: 2048
            MinLength: 0
        - AttributeDataType: String
          Mutable: true
          Name: user_role
          Required: false
          StringAttributeConstraints: 
            MaxLength: 2048
            MinLength: 0                        
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate: 
          - email
      UsernameAttributes: 
        - email
      UserPoolName: tenant-userpool
      UserPoolTags:
        Name: saas-boost-lab-userpool
        Value: tenant
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
  UserPoolAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 60
      AuthSessionValidity: 3
      ClientName: saaas-boost-lab-app-client
      ExplicitAuthFlows: 
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
      GenerateSecret: false
      IdTokenValidity: 60
      RefreshTokenValidity: 30
      TokenValidityUnits: 
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      UserPoolId: !Ref UserPool
  FeCodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      Code:
        BranchName: mainline
        S3:
          Bucket: !Ref CodeBucket
          Key: !Ref FeCodeKey
      RepositoryDescription: Sample SaaS Front End application repository
      RepositoryName: sample-saas-frontend
      Tags: 
        - Key: Name
          Value: saas-boost-lab-frontend-repository
      # Triggers: 
      #   - RepositoryTrigger
  AmplifyServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: saas-boost-lab-amplify-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess-Amplify
  FeHosting:
    Type: AWS::Amplify::App
    DependsOn: 
      - FeCodeRepo
      - UserPool
      - UserPoolAppClient
    Properties: 
      # AccessToken: String
      # AutoBranchCreationConfig: 
      #   AutoBranchCreationConfig
      # BasicAuthConfig: 
      #   BasicAuthConfig
      # BuildSpec: String
      # CustomHeaders: String
      # CustomRules: 
      #   - CustomRule
      Description: Sample SaaS Front End Application Hosting
      EnableBranchAutoDeletion: true
      IAMServiceRole: !GetAtt AmplifyServiceRole.Arn
      Name: sample saas front-end application
      # OauthToken: String
      # Platform: WEB
      Repository: !GetAtt FeCodeRepo.CloneUrlHttp
      BuildSpec: |
        version: 1
        frontend:
          phases:
            preBuild:
              commands:
                - npm ci
            build:
              commands:
                - npm run build
          artifacts:
            baseDirectory: build
            files:
              - '**/*'
          cache:
            paths:
              - node_modules/**/*

      EnvironmentVariables: 
        - Name: REACT_APP_REGION
          Value: !Ref AWS::Region
        - Name: REACT_APP_USER_POOL_ID
          Value: !Ref UserPool
        - Name: REACT_APP_APP_CLIENT_ID
          Value: !Ref UserPoolAppClient
        - Name: REACT_APP_USERS_BASEURL
          Value: !GetAtt ALB.DNSName
        - Name: REACT_APP_RECORDS_BASEURL
          Value: !GetAtt ALB.DNSName
        - Name: REACT_APP_USERS_API_URL
          Value: /api/users
        - Name: REACT_APP_RECORDS_API_URL
          Value: /api/records      
      Tags: 
        - Key: Name
          Value: saas-boost-lab-frontend-hosting
  FeHostingBranch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName: mainline
      AppId: !GetAtt FeHosting.AppId
      EnableAutoBuild: true
Outputs:
  RDSEndpoint:
    Description: RDS Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
  RDSDatabaseName:
    Description: Database Name
    Value: !Ref DBName
  RDSDatabaseMasterUser:
    Description: Master Database User
    Value: !Ref DBMasterUsername
  # RDSDatabaseAppUser:
  #   Description: Application Database User
  #   Value: !Ref DBAppUsername
  JumpBoxDNS:
    Condition: HasKeyPair
    Description: Jump Box DNS
    Value: !GetAtt JumpBox.PublicDnsName
  UserPoolId:
    Description: Created User Pool Id
    Value: !Ref UserPool
  UserPoolAppClientID:
    Description: Created User Pool App Client Id 
    Value: !Ref UserPoolAppClient
  SampleFeRepositoryID:
    Description: ID of the created CodeCommit repo
    Value: !GetAtt FeCodeRepo.CloneUrlHttp
  FrontEndHostingDomain:
    Description: Domain for front end application hosted by Amplify
    Value: !GetAtt FeHosting.DefaultDomain
  BackEndEndPoint:
    Description: Domain for back end application fronted by ALB
    Value: !GetAtt ALB.DNSName